# This is a sample device table file for use with mkfs.jffs2.  You can
# do all sorts of interesting things with a device table file.  For
# example, if you want to adjust the permissions on a particular file
# you can just add an entry like:
#   /sbin/foobar	f	2755	0	0	-	-	-	-	-
# and (assuming the file /sbin/foobar exists) it will be made setuid
# root (regardless of what its permissions are on the host filesystem.
# 
# Device table entries take the form of:
# <name>		<type>	<mode>	<uid>	<gid>	<major>	<minor>	<start>	<inc>	<count>
# where name is the file name,  type can be one of: 
#	f	A regular file
#	d	Directory
#	s	symlink
#	h	hardlink
#	c	Character special device file
#	b	Block special device file
#	p	Fifo (named pipe)
# uid is the user id for the target file, gid is the group id for the
# target file.  The rest of the entried apply only to device special
# file.
# For a symlink or hardlink, specify the target name:
#	/dev/random	s	urandom	-	-	-	-	-	-	-
# mode (or the other fields) make no sense with links
# For a directory, specify the mode, uid and gid
#	/dev/mtdblock	d	755	0	0	-	-	-	-	-

# When building a target filesystem, it is desirable to not have to
# become root and then run 'mknod' a thousand times.  Using a device 
# table you can create device nodes and directories "on the fly".
# Furthermore, you can use a single table entry to create a many device
# minors.  For example, if I wanted to create /dev/hda and /dev/hda[0-15]
# I could just use the following two table entries:
#   /dev/hda	b	640	0	0	3	0	0	0	-
#   /dev/hda	b	640	0	0	3	1	1	1	15
#
# Have fun
# -Erik Andersen <andersen@codepoet.org>
# extended to support links
# -Neil Williams <codehelp@debian.org>
#
# All lines must have exactly 10 entries, except comments

#<name>		<type>	<mode>	<uid>	<gid>	<major>	<minor>	<start>	<inc>	<count>
/dev	d	755	0	0	-	-	-	-	-
/dev/mem	c	640	0	0	1	1	0	0	-
/dev/kmem	c	640	0	0	1	2	0	0	-
/dev/null	c	640	0	0	1	3	0	0	-
/dev/zero	c	640	0	0	1	5	0	0	-
/dev/random	c	640	0	0	1	8	0	0	-
/dev/urandom	c	640	0	0	1	9	0	0	-
/dev/tty	c	666	0	0	5	0	0	0	-
/dev/tty	c	666	0	0	4	0	0	1	6
/dev/console	c	640	0	0	5	1	0	0	-
/dev/ram	b	640	0	0	1	1	0	0	-
/dev/ram	b	640	0	0	1	0	0	1	4
/dev/loop	b	640	0	0	7	0	0	1	2
/dev/ptmx	c	666	0	0	5	2	0	0	-
